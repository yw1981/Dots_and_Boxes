var gameLogic;!function(a){function b(){return[["","",""],["","",""],["","",""]]}function c(a){for(var b=0;3>b;b++)for(var c=0;3>c;c++)if(""===a[b][c])return!1;return!0}function d(a){for(var b="",c=0;3>c;c++)for(var d=0;3>d;d++){var e=a[c][d];b+=""===e?" ":e}var f=["XXX......","...XXX...","......XXX","X..X..X..",".X..X..X.","..X..X..X","X...X...X","..X.X.X.."];for(c=0;c<f.length;c++){var g=f[c],h=new RegExp(g),i=new RegExp(g.replace(/X/g,"O"));if(h.test(b))return"X";if(i.test(b))return"O"}return""}function e(a,b){for(var c=[],d=0;3>d;d++)for(var e=0;3>e;e++)try{c.push(f(a,d,e,b))}catch(g){}return c}function f(a,e,f,g){if(a||(a=b()),""!==a[e][f])throw new Error("One can only make a move in an empty position!");if(""!==d(a)||c(a))throw new Error("Can only make a move if the game is not over!");var h=angular.copy(a);h[e][f]=0===g?"X":"O";var i,j=d(h);i=""!==j||c(h)?{endMatch:{endMatchScores:"X"===j?[1,0]:"O"===j?[0,1]:[0,0]}}:{setTurn:{turnIndex:1-g}};var k={row:e,col:f};return[i,{set:{key:"board",value:h}},{set:{key:"delta",value:k}}]}function g(a){var b=a.move,c=a.turnIndexBeforeMove,d=a.stateBeforeMove;try{var e=b[2].set.value,g=e.row,h=e.col,i=d.board,j=f(i,g,h,c);if(!angular.equals(b,j))return!1}catch(k){return!1}return!0}a.getInitialBoard=b,a.getPossibleMoves=e,a.createMove=f,a.isMoveOk=g}(gameLogic||(gameLogic={}));var game;!function(a){function b(){console.log("Translation of 'RULES_OF_Dots_and_Boxes' is "+translate("RULES_OF_Dots_and_Boxes")),resizeGameAreaService.setWidthToHeight(1),gameService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,isMoveOk:gameLogic.isMoveOk,updateUI:e}),document.addEventListener("animationend",c,!1),document.addEventListener("webkitAnimationEnd",c,!1),document.addEventListener("oanimationend",c,!1)}function c(){$rootScope.$apply(function(){log.info("Animation ended"),k=!0,m&&d()})}function d(){gameService.makeMove(aiService.createComputerMove(n.board,o,{millisecondsLimit:1e3}))}function e(a){k=!1,n=a.stateAfterMove,n.board||(n.board=gameLogic.getInitialBoard()),l=a.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.turnIndexAfterMove,o=a.turnIndexAfterMove,m=l&&""===a.playersInfo[a.yourPlayerIndex].playerId,m&&(l=!1,n.delta||d())}function f(a,b){if(log.info(["Clicked on cell:",a,b]),"?throwException"===window.location.search)throw new Error("Throwing the error because URL has '?throwException'");if(l)try{var c=gameLogic.createMove(n.board,a,b,o);l=!1,gameService.makeMove(c)}catch(d){return void log.info(["Cell is already full in position:",a,b])}}function g(a,b){var c=n.board[a][b];return""!==c}function h(a,b){return"X"===n.board[a][b]}function i(a,b){return"O"===n.board[a][b]}function j(a,b){return!k&&n.delta&&n.delta.row===a&&n.delta.col===b}var k=!1,l=!1,m=!1,n=null,o=null;a.isHelpModalShown=!1,a.init=b,a.cellClicked=f,a.shouldShowImage=g,a.isPieceX=h,a.isPieceO=i,a.shouldSlowlyAppear=j}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap"]).run(["initGameServices",function(){$rootScope.game=game,translate.setLanguage("en",{RULES_OF_Dots_and_Boxes:"Rules of Dots_and_Boxes",RULES_SLIDE1:"You and your opponent take turns to mark the grid in an empty spot. The first mark is X, then O, then X, then O, etc.",RULES_SLIDE2:"The first to mark a whole row, column or diagonal wins.",CLOSE:"Close"}),game.init()}]);var aiService;!function(a){function b(a,b,f){return alphaBetaService.alphaBetaDecision([null,{set:{key:"board",value:a}}],b,d,c,"?debug"===window.location.search?e:null,f)}function c(a){if(a[0].endMatch){var b=a[0].endMatch.endMatchScores;return b[0]>b[1]?Number.POSITIVE_INFINITY:b[0]<b[1]?Number.NEGATIVE_INFINITY:0}return 0}function d(a,b){return gameLogic.getPossibleMoves(a[1].set.value,b)}function e(a){return"\n"+a[1].set.value.join("\n")+"\n"}a.createComputerMove=b}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map